server {
    server_name social.m-gh.com;
    access_log /var/log/nginx/api-social_access.log;
    error_log  /var/log/nginx/api-social_error.log;
    client_max_body_size 10m;

    location /static/ {
        alias /var/www/social/static/;
    }

    location /media/ {
        alias /var/www/social/media/;
    }

    # WebSocket proxy
    location /ws/ {
        proxy_pass http://127.0.0.1:8032/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }

    location / {
        proxy_buffers 8 24k;
        proxy_buffer_size 2k;
        proxy_pass http://127.0.0.1:8030;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/social.m-gh.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/social.m-gh.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = social.m-gh.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name social.m-gh.com;
    listen 80;
    return 404; # managed by Certbot
}